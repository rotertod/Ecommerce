@model Ecommerce.Models.Customer

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<!-- Begin FB's Breadcrumb Area -->
<div class="breadcrumb-area pt-30">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb-content">
                    <ul>
                        <li><a href="/">Trang chủ</a></li>
                        <li><a href="~/Account/MyProfile/@Model.CustomerID">Thông tin tài khoản</a></li>
                        <li class="active">Chỉnh sửa thông tin tài khoản</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- FB's Breadcrumb Area End Here -->

<div class="page-section pt-60 pb-60">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 col-xs-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.CustomerID)
                    @Html.HiddenFor(m => m.CreateDate)

                    <ul class="nav nav-tabs" id="myTabs">
                        <li class="nav-item">
                            <a class="nav-link active" id="personal-tab" data-bs-toggle="tab" href="#personalSection">Personal Info</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="login-tab" data-bs-toggle="tab" href="#loginSection">Login Info</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="avatar-tab" data-bs-toggle="tab" href="#avatarSection">Avatar</a>
                        </li>
                        <li style="margin-left: auto; margin-right: 20px">
                            <div class="col-md-offset-2">
                                <button type="submit" class="btn btn-outline-info" style="line-height: 28px;">
                                    <i class="fa fa-save" style="margin-right: 6px"></i>
                                    Save
                                </button>
                            </div>
                        </li>
                    </ul>

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="tab-content mt-3">
                            <div class="tab-pane active" id="personalSection">
                                <div class="login-form">
                                    <div class="row">
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Họ tên</label>
                                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Ngày sinh</label>
                                            @Html.TextBoxFor(model => model.Birthday, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Địa chỉ</label>
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Số điện thoại</label>
                                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Tỉnh/thành</label>
                                            @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="loginSection" class="tab-pane">
                                <div class="login-form">
                                    <div class="row">
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Email</label>
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Password</label>
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 col-12 mb-20">
                                            <label>Active</label>
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.Active)
                                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="avatarSection" class="tab-pane">
                                <div class="form-group mb-4 d-flex justify-content-center">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @type = "file", @onchange = "displayImage(this)" } })
                                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div id="imagePreview" class="d-flex justify-content-center">
                                    <!-- Nơi hiển thị hình ảnh -->
                                    <img style="object-fit: cover; width: 100%" src="~/Content/images/customers/@Model.Avatar" alt="@Model.FullName" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

<style>
    /* Thay đổi kích thước của checkbox */
    .checkbox input[type="checkbox"] {
        transform: scale(1.5);
    }
</style>

<script>
    function displayImage(input) {
        var preview = document.getElementById('imagePreview');

        // Xóa hình ảnh trước đó
        while (preview.firstChild) {
            preview.removeChild(preview.firstChild);
        }

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var image = document.createElement('img');
                image.setAttribute('src', e.target.result);
                image.setAttribute('class', 'img-thumbnail');
                preview.appendChild(image);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

